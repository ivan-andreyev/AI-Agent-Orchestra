{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://orchestra.ai/schemas/workflow-definition.json",
  "title": "Workflow Definition Schema",
  "description": "JSON Schema for Orchestra Workflow Definition validation",
  "type": "object",
  "required": ["id", "name", "steps", "variables", "metadata"],
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9-_]+$",
      "description": "Unique identifier for the workflow"
    },
    "name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "description": "Human-readable name of the workflow"
    },
    "steps": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/workflowStep"
      },
      "description": "List of workflow steps to execute"
    },
    "variables": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/variableDefinition"
      },
      "description": "Variable definitions for the workflow"
    },
    "metadata": {
      "$ref": "#/definitions/workflowMetadata",
      "description": "Metadata about the workflow"
    }
  },
  "definitions": {
    "workflowStep": {
      "type": "object",
      "required": ["id", "type", "command", "parameters", "dependsOn"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9-_]+$",
          "description": "Unique identifier for the step"
        },
        "type": {
          "type": "string",
          "enum": ["Task", "Condition", "Loop", "Parallel", "Start", "End"],
          "description": "Type of workflow step"
        },
        "command": {
          "type": "string",
          "minLength": 1,
          "description": "Command to execute for this step"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": true,
          "description": "Parameters for the step execution"
        },
        "dependsOn": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]+$"
          },
          "description": "List of step IDs this step depends on"
        },
        "condition": {
          "$ref": "#/definitions/conditionalLogic",
          "description": "Optional conditional logic for step execution"
        },
        "retryPolicy": {
          "$ref": "#/definitions/retryPolicy",
          "description": "Optional retry policy for failed steps"
        }
      }
    },
    "conditionalLogic": {
      "type": "object",
      "required": ["expression"],
      "properties": {
        "expression": {
          "type": "string",
          "minLength": 1,
          "description": "Boolean expression to evaluate"
        },
        "truePath": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]+$"
          },
          "description": "Step IDs to execute when condition is true"
        },
        "falsePath": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]+$"
          },
          "description": "Step IDs to execute when condition is false"
        }
      }
    },
    "retryPolicy": {
      "type": "object",
      "required": ["maxRetries", "delayBetweenRetries"],
      "properties": {
        "maxRetries": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10,
          "description": "Maximum number of retry attempts"
        },
        "delayBetweenRetries": {
          "type": "string",
          "pattern": "^[0-9]+:[0-5][0-9]:[0-5][0-9]$",
          "description": "Delay between retries in HH:mm:ss format"
        },
        "exponentialBackoff": {
          "type": "boolean",
          "default": false,
          "description": "Whether to use exponential backoff for delays"
        }
      }
    },
    "variableDefinition": {
      "type": "object",
      "required": ["name", "type"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
          "description": "Variable name (valid identifier)"
        },
        "type": {
          "type": "string",
          "enum": ["String", "Int32", "Boolean", "DateTime", "Object"],
          "description": "Variable data type"
        },
        "defaultValue": {
          "description": "Default value for the variable"
        },
        "isRequired": {
          "type": "boolean",
          "default": false,
          "description": "Whether the variable is required"
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the variable"
        }
      }
    },
    "workflowMetadata": {
      "type": "object",
      "required": ["author", "description", "version", "createdAt", "tags"],
      "properties": {
        "author": {
          "type": "string",
          "minLength": 1,
          "description": "Author of the workflow"
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "Description of the workflow purpose"
        },
        "version": {
          "type": "string",
          "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
          "description": "Semantic version (e.g., 1.0.0)"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 creation timestamp"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "description": "Tags for categorization"
        }
      }
    }
  }
}