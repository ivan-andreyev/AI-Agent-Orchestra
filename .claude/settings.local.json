{
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "mcp__ide__getDiagnostics",
      "Bash(awk:*)",
      "Bash(claude config list)",
      "Bash(claude config set permissions.allow:*)",
      "Bash(claude config set allowedTools:*)",
      "Bash(claude-code:*)",
      "Bash(csc:*)",
      "Bash(curl:*)",
      "Bash(dir:*)",
      "Bash(dotnet build:*)",
      "Bash(dotnet clean:*)",
      "Bash(dotnet new:*)",
      "Bash(dotnet restore:*)",
      "Bash(dotnet run:*)",
      "Bash(dotnet sln:*)",
      "Bash(dotnet test:*)",
      "Bash(find:*)",
      "Bash(findstr:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr view:*)",
      "Bash(gh run view:*)",
      "Bash(git ls-tree:*)",
      "Bash(git show:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(move:*)",
      "Bash(mv:*)",
      "Bash(powershell:*)",
      "Bash(rg:*)",
      "Bash(sed:*)",
      "Bash(taskkill:*)",
      "Bash(tasklist)",
      "Bash(timeout:*)",
      "Bash(wc:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:help.syncfusion.com)",
      "WebSearch",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(dotnet build:*)",
      "Bash(start http://localhost:5284/swagger/index.html)",
      "Bash(git log:*)",
      "Bash(netstat:*)",
      "Bash(set ASPNETCORE_URLS=http://localhost:5284)",
      "Bash(Select-String -Pattern \"error|Build succeeded|Build FAILED\" -Context 0,2)",
      "Bash(Select-String -Pattern \"^\\[Ad|CHECK #|Test MS|Task status|FAILED|Passed|Failed\" -Context 0,2)",
      "Bash(cat:*)",
      "Bash(\"taskkill\" \"/F\" \"/IM\" \"EllyAnalytics.exe\")",
      "Bash(Get-Process -Name \"EllyAnalytics\")",
      "Bash(Stop-Process -Force)",
      "Bash(tree:*)",
      "Bash(claude config get agentsPath)",
      "Bash(git pull:*)",
      "Bash(git commit:*)",
      "Bash(test:*)",
      "Bash(Get-Date -Format \"yyyy-MM-dd HH:mm:ss\")",
      "Bash(Select-String -Pattern \"(error|warning|Build succeeded|Build FAILED)\" -Context 1,1)",
      "Bash(Select-String -Pattern \"(error|warning)\" -Context 0,0)",
      "Bash(Select-String -Pattern \"error|warning|Build succeeded|Build FAILED\")",
      "Bash(Select-Object -First 10)",
      "Bash(Select-String -Pattern \"Total tests:|Passed:|Failed:|Skipped:\")",
      "Bash(Select-Object -First 5)",
      "Bash(Select-String -Pattern \"(FAIL|Passed|Failed|Assert\\.)\" -Context 2,2)",
      "Bash(/dev/null)",
      "Bash(Select-String -Pattern \"(Пройден|Passed|не пройдено|failed|пройдено|passed|пропущено|skipped|всего|total|длительность|duration)\" -Context 0,2)",
      "Bash(Select-String -Pattern \"(Build succeeded|Build FAILED|error|warning)\")",
      "Bash(for:*)",
      "Bash(done)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then wc -l \"$file\")",
      "Bash(else echo \"FILE NOT FOUND\")",
      "Bash(fi)",
      "Bash(Get-Content \"C:\\Users\\mrred\\RiderProjects\\AI-Agent-Orchestra\\.cursor\\agents\\review-consolidator\\agent.md\")",
      "Bash(Select-String -Pattern \"^## \")",
      "Bash(do echo \"== $section ==\")",
      "Bash(Select-String -Pattern \"(FAIL|Expected|Actual|StackTrace)\" -Context 2)",
      "Bash(Select-String -Pattern \"(Passed|Failed|Total tests)\")",
      "Bash(Select-Object -Last 5)"
    ],
    "deny": [],
    "ask": []
  }
}
